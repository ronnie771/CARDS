{"version":3,"sources":["components/navbar.jsx","components/footer.jsx","components/home.jsx","components/about.jsx","components/common/input.jsx","components/common/form.jsx","services/userService.js","services/httpService.js","components/signup.jsx","components/signin.jsx","components/logout.jsx","components/bizSignup.jsx","services/cardService.js","components/createCard.jsx","components/common/protectedRoute.jsx","components/card.jsx","components/myCards.jsx","components/editCard.jsx","components/homeuser.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","user","this","props","className","to","biz","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","Component","Footer","Date","getFullYear","Home","role","About","Input","name","label","error","placeholder","rest","htmlFor","Form","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","enabled","onChange","email","password","a","http","post","apiUrl","localStorage","setItem","token","login","getCurrentUser","jwt","getItem","jwtDecode","ex","logout","removeItem","getJwt","axios","defaults","headers","common","userService","interceptors","response","use","status","toast","Promise","reject","get","put","patch","delete","Signup","string","required","min","history","replace","onSubmit","autoComplete","method","renderInput","renderButton","Signin","window","location","Logout","BizSignup","createCard","card","getMyCards","editCard","cardId","_id","getCard","deleteCard","CreateCard","bizName","bizDescription","bizAddress","bizPhone","bizImage","max","regex","uri","allow","cardService","ProtectedRoute","component","render","currentUser","pathname","from","Card","src","width","height","alt","MyCards","cards","length","map","key","EditCard","handleCancel","push","match","params","mapToViewModel","onClick","Homeuser","App","style","minHeight","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7e875729.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <nav className=\"navbar  navbar-expand-lg navbar-light bg-transperant\">\r\n        <div className=\"container iconz\">\r\n          {!user && (\r\n            <Link className=\"nav-item nav-link\" to=\"/\"><i>Home</i></Link>\r\n          )}\r\n        {user && user.biz && (\r\n          <Link className=\"nav-item nav-link\" to=\"/homeuser\">\r\n          <i >Home</i>\r\n          </Link> )}\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse d-lg-flex \" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item \">\r\n                <NavLink className=\"nav-item nav-link\" to=\"/about\">\r\n                  About\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {user && user.biz && (\r\n                  <NavLink className=\"nav-item nav-link\" to=\"/my-cards\">\r\n                    My Cards\r\n                  </NavLink>\r\n                )}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {user && user.biz && (\r\n                  <NavLink className=\"nav-item nav-link \" to=\"/create-card\">\r\n                   create\r\n                  </NavLink>\r\n                )}\r\n              </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              {!user && (\r\n                <React.Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-item nav-link navbar-right\" to=\"/signin\">\r\n                      Login\r\n                    </NavLink>\r\n                  </li>\r\n        \r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-item nav-link\" to=\"/biz-signup\">\r\n                      Sign up\r\n                    </NavLink>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n              {user && (\r\n                <React.Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                      Logout\r\n                    </NavLink>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className=\"border-top pt-3 text-center\">\r\n      All rights reserved to Ronnie michayev  &copy; {new Date().getFullYear()}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nclass Home extends Component {\r\n  state = {};\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      \r\n        <div className=\"container hcont\"> \r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 titlez\">\r\n            <h1>MyCards</h1>\r\n          <p>Create your own Bussiness cards </p>\r\n          <p>with all the info you want to present about your business! </p>\r\n          </div>\r\n          <div className=\"col-sm-6 btncontainer\">\r\n                    \r\n                    <Link className=\"btn btn-primary homebtn \" role=\"button\" to=\"/signin\"> Login</Link>\r\n                    <Link className=\"btn btn-primary homebtn\" role=\"button\" to=\"/biz-signup\"> Signup</Link>\r\n             \r\n          </div>\r\n        </div>\r\n        </div>\r\n        \r\n          \r\n      \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\n\r\nclass About extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n  \r\n       \r\n            <p>Content example text for about page here.</p>\r\n          </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\n\r\nconst Input = ({ name, label,  error, placeholder, ...rest  }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} placeholder={placeholder} className=\"form-control\" />\r\n      {error && <span className=\"text-danger errz\">{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\n\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button enabled={this.validate()} className=\"btn btn-primary btnf\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label,  type = \"text\", placeholder ) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst tokenKey = \"token\";\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function login(email, password) {\r\n  const { data } = await http.post(`${apiUrl}/auth`, { email, password });\r\n  localStorage.setItem(tokenKey, data.token);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  getCurrentUser,\r\n  logout,\r\n  getJwt\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"./userService\";\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = userService.getJwt();\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError = error.response && error.response.status >= 403;\r\n  if (expectedError) toast.error(\"An unexpected error occurrred.\");\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  patch: axios.patch,\r\n  delete: axios.delete\r\n};\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport http from \"../services/httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Signup extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .min(2)\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    data.biz = false;\r\n\r\n    try {\r\n      await http.post(`${apiUrl}/users`, data);\r\n      toast(\"A new acoount is opened\");\r\n      this.props.history.replace(\"/signin\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: \"Email is taken\" } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container formz\">\r\n      \r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>You can open new account for free!</p>\r\n          </div>\r\n        \r\n    \r\n            <form  onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\" >\r\n            <i className=\"far fa-address-card primary fa-4x\"><h5>Sign up</h5></i>\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderButton(\"Signup\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport userService from \"../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass Signin extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { email, password } = this.state.data;\r\n\r\n    try {\r\n      await userService.login(email, password);\r\n      window.location = \"/homeuser\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: ex.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (userService.getCurrentUser()) return <Redirect to=\"/homeuser\" />;\r\n\r\n    return (\r\n      <div className=\"container formz\">\r\n      \r\n        <div className=\"row rowf\">\r\n          <div className=\"col-12\">\r\n          <p className=\"p\"> Login with your account </p>\r\n          </div>\r\n    \r\n       \r\n          \r\n            <form  onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n            <i className=\"far fa-address-card primary fa-4x\"><h5>login</h5></i>\r\n             \r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              <div> \r\n                <br /> {this.renderButton(\"Login\")}</div>\r\n              \r\n            </form>\r\n           \r\n           \r\n            </div></div>\r\n     \r\n      \r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import { Component } from \"react\";\r\nimport userService from \"../services/userService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    userService.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport http from \"../services/httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport userService from \"../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass BizSignup extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .min(2)\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    data.biz = true;\r\n\r\n    try {\r\n      await http.post(`${apiUrl}/users`, data);\r\n      await userService.login(data.email, data.password);\r\n      window.location = \"/create-card\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: \"Email is taken\" } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container formz\">\r\n     \r\n        <div className=\"row rowf\">\r\n          <div className=\"col-12\">\r\n            <p className=\"p\">Sign up and Create your Bussiness Card! </p>\r\n          </div>\r\n        \r\n    \r\n       \r\n         \r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n            <i className=\"far fa-address-card primary fa-4x\"><h5>Sign up</h5></i>\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderButton(\"Next\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default BizSignup;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function getCard(cardId) {\r\n  return http.get(`${apiUrl}/cards/${cardId}`);\r\n}\r\n\r\nexport function editCard(card) {\r\n  const cardId = card._id;\r\n  delete card._id;\r\n  return http.put(`${apiUrl}/cards/${cardId}`, card);\r\n}\r\n\r\nexport function getMyCards() {\r\n  return http.get(`${apiUrl}/cards/my-cards`);\r\n}\r\n\r\nexport function createCard(card) {\r\n  return http.post(`${apiUrl}/cards`, card);\r\n}\r\n\r\nexport function deleteCard(card) {\r\n  const cardId = card._id;\r\n  delete card._id;\r\n  return http.delete(`${apiUrl}/cards/${cardId}`, card);\r\n}\r\nexport default {\r\n  createCard,\r\n  getMyCards,\r\n  editCard,\r\n  getCard,\r\n  deleteCard\r\n};\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport cardService from \"../services/cardService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass CreateCard extends Form {\r\n  state = {\r\n    data: {\r\n      bizName: \"\",\r\n      bizDescription: \"\",\r\n      bizAddress: \"\",\r\n      bizPhone: \"\",\r\n      bizImage: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    bizName: Joi.string()\r\n      .min(2)\r\n      .max(255)\r\n      .required(),\r\n    bizDescription: Joi.string()\r\n      .min(2)\r\n      .max(1024)\r\n      .required(),\r\n    bizAddress: Joi.string()\r\n      .min(2)\r\n      .max(400)\r\n      .required(),\r\n    bizPhone: Joi.string()\r\n      .min(9)\r\n      .max(10)\r\n      .required()\r\n      .regex(/^0[2-9]\\d{7,8}$/),\r\n    bizImage: Joi.string()\r\n      .min(11)\r\n      .max(1024)\r\n      .uri()\r\n      .allow(\"\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    if (!data.bizImage) delete data.bizImage;\r\n    await cardService.createCard(this.state.data);\r\n    toast(\"A new card is opened\");\r\n    this.props.history.replace(\"/my-cards\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"container formz\">\r\n        \r\n        <div className=\"row \">\r\n          <div className=\"col-12\">\r\n          <p className=\"titlecreate\">Create your first Biz card</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row \">\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"bizName\", \"Business Name\")}\r\n              {this.renderInput(\"bizDescription\", \"Business Description\")}\r\n              {this.renderInput(\"bizAddress\", \"Business Address\")}\r\n              {this.renderInput(\"bizPhone\", \"Business Phone\", \"undefined\", \" 03..,050..,052..\")}\r\n              {this.renderInput(\"bizImage\", \"Business Image\", \"undefined\",  \"insert image URL / leave blank  \")}\r\n              {this.renderButton(\"Create Card\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateCard;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport userService from \"../../services/userService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  const currentUser = userService.getCurrentUser();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!currentUser || (rest.biz && !currentUser.biz))\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/signin\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({ card }) => {\r\n  return (\r\n    <div className=\"col-md-6 col-lg-4 mt-3\">\r\n      <div className=\"card\">\r\n        <img\r\n          className=\"p-2\"\r\n          src={card.bizImage}\r\n          width=\"300\"\r\n          height=\"250\"\r\n          alt={card.bizName}\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{card.bizName}</h5>\r\n          <p className=\"card-text\">{card.bizDescription}</p>\r\n          <p className=\"card-text border-top pt-2\">\r\n            <b>Tel: </b>\r\n            {card.bizPhone}\r\n            <br />\r\n            {card.bizAddress}\r\n          </p>\r\n          <Link to={`/my-cards/edit/${card._id}`}>Edit</Link> |\r\n          <Link className=\"ml-2\" to={`/my-cards/delete/${card._id}`}>\r\n            Delete\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport cardService from \"../services/cardService\";\r\nimport Card from \"./card\";\r\n\r\nclass MyCards extends Component {\r\n  state = {\r\n    cards: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await cardService.getMyCards();\r\n    if (data.length > 0) this.setState({ cards: data });\r\n  }\r\n\r\n  render() {\r\n    const { cards } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n       \r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>Your cards in the list below...</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {cards.length > 0 &&\r\n            cards.map(card => <Card key={card._id} card={card} />)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyCards;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport cardService from \"../services/cardService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass EditCard extends Form {\r\n  state = {\r\n    data: {\r\n      bizName: \"\",\r\n      bizDescription: \"\",\r\n      bizAddress: \"\",\r\n      bizPhone: \"\",\r\n      bizImage: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    bizName: Joi.string()\r\n      .min(2)\r\n      .max(255)\r\n      .required(),\r\n    bizDescription: Joi.string()\r\n      .min(2)\r\n      .max(1024)\r\n      .required(),\r\n    bizAddress: Joi.string()\r\n      .min(2)\r\n      .max(400)\r\n      .required(),\r\n    bizPhone: Joi.string()\r\n      .min(9)\r\n      .max(10)\r\n      .required()\r\n      .regex(/^0[2-9]\\d{7,8}$/),\r\n    bizImage: Joi.string()\r\n      .min(11)\r\n      .max(1024)\r\n      .uri()\r\n      .allow(\"\")\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const cardId = this.props.match.params.id;\r\n    const { data } = await cardService.getCard(cardId);\r\n    this.setState({ data: this.mapToViewModel(data) });\r\n  }\r\n\r\n  mapToViewModel(card) {\r\n    return {\r\n      _id: card._id,\r\n      bizName: card.bizName,\r\n      bizDescription: card.bizDescription,\r\n      bizAddress: card.bizAddress,\r\n      bizPhone: card.bizPhone,\r\n      bizImage: card.bizImage\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    await cardService.editCard(data);\r\n    toast(\"Card is Updated\");\r\n    this.props.history.replace(\"/my-cards\");\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.history.push(\"/my-cards\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n       \r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>Fill out card details here</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"bizName\", \"Business Name\")}\r\n              {this.renderInput(\"bizDescription\", \"Business Description\")}\r\n              {this.renderInput(\"bizAddress\", \"Business Address\")}\r\n              {this.renderInput(\"bizPhone\", \"Business Phone\")}\r\n              {this.renderInput(\"bizImage\", \"Business Image\")}\r\n              {this.renderButton(\"Update Card\")}\r\n              <button\r\n                className=\"btn btn-secondary ml-2\"\r\n                onClick={this.handleCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCard;\r\n","import React, { Component } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nclass Homeuser extends Component {\r\n  state = {};\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      \r\n        <div className=\"container \"> \r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 titlez\">\r\n            <h1>MyCards</h1>\r\n          <p>Create your own Bussiness cards </p>\r\n          <p>with all the info you want to present about your business! </p>\r\n          </div>\r\n          <div className=\"col-sm-6 btncontainer\">\r\n                    \r\n                   \r\n                 \r\n                   \r\n                    <Link className=\"btn btn-primary homebtn \" role=\"button\" to=\"/create-card\"> create</Link>\r\n                    <Link className=\"btn btn-primary homebtn\" role=\"button\" to=\"/my-cards\"> my cards</Link>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        \r\n          \r\n      \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Homeuser;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport Footer from \"./components/footer\";\nimport Home from \"./components/home\";\nimport About from \"./components/about\";\nimport Signup from \"./components/signup\";\nimport Signin from \"./components/signin\";\nimport Logout from \"./components/logout\";\nimport BizSignup from \"./components/bizSignup\";\nimport CreateCard from \"./components/createCard\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport userService from \"./services/userService\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport MyCards from \"./components/myCards\";\nimport EditCard from \"./components/editCard\";\nimport Homeuser from \"./components/homeuser\";\n\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = userService.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <header>\n          <Navbar user={user} />\n          \n        </header>\n        <main style={{ minHeight: 900 }}>\n          <Switch>\n            <ProtectedRoute\n              path=\"/my-cards/edit/:id\"\n              component={EditCard}\n              biz={true}\n            />\n            <ProtectedRoute\n              path=\"/my-cards/delete/:id\"\n              component={MyCards}\n              biz={true}\n            />\n            <ProtectedRoute path=\"/my-cards\" component={MyCards} biz={true} />\n            \n            <ProtectedRoute\n              path=\"/create-card\"\n              exact component={CreateCard}\n              biz={true}\n            />\n            <ProtectedRoute path=\"/homeuser\" \n             component={Homeuser} \n             biz={true} \n            />\n\n            <Route path=\"/biz-signup\" component={BizSignup} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/signin\" component={Signin} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/\" exact component={Home}   />\n          </Switch>\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"jquery/dist/jquery\";\nimport \"popper.js/dist/popper\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}