{"version":3,"sources":["components/navbar.jsx","components/footer.jsx","components/common/pageHeader.jsx","components/home.jsx","components/about.jsx","components/common/input.jsx","components/common/form.jsx","services/userService.js","services/httpService.js","components/signup.jsx","components/signin.jsx","components/logout.jsx","components/bizSignup.jsx","services/cardService.js","components/createCard.jsx","components/common/protectedRoute.jsx","components/card.jsx","components/myCards.jsx","components/editCard.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","user","this","props","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","biz","Fragment","Component","Footer","Date","getFullYear","PageHeader","href","role","Home","About","Input","name","label","error","rest","htmlFor","Form","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","onChange","email","password","a","http","post","apiUrl","localStorage","setItem","token","login","getCurrentUser","jwt","getItem","jwtDecode","ex","logout","removeItem","getJwt","axios","defaults","headers","common","userService","interceptors","response","use","status","toast","Promise","reject","get","put","patch","delete","Signup","string","required","min","history","replace","titleText","onSubmit","autoComplete","method","renderInput","renderButton","Signin","window","location","Logout","BizSignup","onClick","createCard","card","getMyCards","editCard","cardId","_id","getCard","deleteCard","CreateCard","bizName","bizDescription","bizAddress","bizPhone","bizImage","max","regex","uri","allow","cardService","ProtectedRoute","component","render","currentUser","pathname","from","Card","src","width","height","alt","MyCards","cards","length","map","key","EditCard","handleCancel","push","match","params","mapToViewModel","App","style","minHeight","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bab5764c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark shadow-sm\">\r\n        <div className=\"container\">\r\n          <Link className=\"nav-item nav-link\" to=\"/\">\r\n            Real App\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-item nav-link\" to=\"/about\">\r\n                  About\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {user && user.biz && (\r\n                  <NavLink className=\"nav-item nav-link\" to=\"/my-cards\">\r\n                    My Cards\r\n                  </NavLink>\r\n                )}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {user && user.biz && (\r\n                  <NavLink className=\"nav-item nav-link\" to=\"/create-card\">\r\n                   create\r\n                  </NavLink>\r\n                )}\r\n              </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              {!user && (\r\n                <React.Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-item nav-link\" to=\"/signin\">\r\n                      Signin\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-item nav-link\" to=\"/signup\">\r\n                      Signup\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-item nav-link\" to=\"/biz-signup\">\r\n                      Business\r\n                    </NavLink>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n              {user && (\r\n                <React.Fragment>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                      Logout\r\n                    </NavLink>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className=\"border-top pt-3 text-center\">\r\n      Real App &copy; {new Date().getFullYear()}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\n\r\n\r\nconst PageHeader = () => {\r\n  return (  \r\n  \r\n\r\n<div className=\"lol\">\r\n  <h1 className=\"display-4\">Welcome to MyCards</h1>\r\n  \r\n  <p>Create your own modified bussiness card here ,for your personal or your bussiness needs, in only a few easy steps..</p>\r\n  <p className=\"lead\">\r\n    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Get Started!</a>\r\n  </p>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React, { Component } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"container \">\r\n        <PageHeader  />\r\n        \r\n          </div>\r\n      \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\n\r\nclass About extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader  />\r\n       \r\n            <p>Content example text for about page here.</p>\r\n          </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <span className=\"text-danger\">{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst tokenKey = \"token\";\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function login(email, password) {\r\n  const { data } = await http.post(`${apiUrl}/auth`, { email, password });\r\n  localStorage.setItem(tokenKey, data.token);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  getCurrentUser,\r\n  logout,\r\n  getJwt\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"./userService\";\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = userService.getJwt();\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError = error.response && error.response.status >= 403;\r\n  if (expectedError) toast.error(\"An unexpected error occurrred.\");\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  patch: axios.patch,\r\n  delete: axios.delete\r\n};\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport http from \"../services/httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Signup extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .min(2)\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    data.biz = false;\r\n\r\n    try {\r\n      await http.post(`${apiUrl}/users`, data);\r\n      toast(\"A new acoount is opened\");\r\n      this.props.history.replace(\"/signin\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: \"Email is taken\" } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Signup for Real App\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>You can open new account for free!</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderButton(\"Signup\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport userService from \"../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Signin extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { email, password } = this.state.data;\r\n    try {\r\n      await userService.login(email, password);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: ex.response.data } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Signin to Real App\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>You can signin here with your account!</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Signin\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import { Component } from \"react\";\r\nimport userService from \"../services/userService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    userService.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport http from \"../services/httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\nimport userService from \"../services/userService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass BizSignup extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Email\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .min(2)\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    data.biz = true;\r\n\r\n    try {\r\n      await http.post(`${apiUrl}/users`, data);\r\n      await userService.login(data.email, data.password);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        this.setState({ errors: { email: \"Email is taken\" } });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (userService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Business Registration Form\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>Open business account for free!</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <form onClick={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderButton(\"Next\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BizSignup;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function getCard(cardId) {\r\n  return http.get(`${apiUrl}/cards/${cardId}`);\r\n}\r\n\r\nexport function editCard(card) {\r\n  const cardId = card._id;\r\n  delete card._id;\r\n  return http.put(`${apiUrl}/cards/${cardId}`, card);\r\n}\r\n\r\nexport function getMyCards() {\r\n  return http.get(`${apiUrl}/cards/my-cards`);\r\n}\r\n\r\nexport function createCard(card) {\r\n  return http.post(`${apiUrl}/cards`, card);\r\n}\r\n\r\nexport function deleteCard(card) {\r\n  const cardId = card._id;\r\n  delete card._id;\r\n  return http.delete(`${apiUrl}/cards/${cardId}`, card);\r\n}\r\nexport default {\r\n  createCard,\r\n  getMyCards,\r\n  editCard,\r\n  getCard,\r\n  deleteCard\r\n};\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport cardService from \"../services/cardService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass CreateCard extends Form {\r\n  state = {\r\n    data: {\r\n      bizName: \"\",\r\n      bizDescription: \"\",\r\n      bizAddress: \"\",\r\n      bizPhone: \"\",\r\n      bizImage: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    bizName: Joi.string()\r\n      .min(2)\r\n      .max(255)\r\n      .required(),\r\n    bizDescription: Joi.string()\r\n      .min(2)\r\n      .max(1024)\r\n      .required(),\r\n    bizAddress: Joi.string()\r\n      .min(2)\r\n      .max(400)\r\n      .required(),\r\n    bizPhone: Joi.string()\r\n      .min(9)\r\n      .max(10)\r\n      .required()\r\n      .regex(/^0[2-9]\\d{7,8}$/),\r\n    bizImage: Joi.string()\r\n      .min(11)\r\n      .max(1024)\r\n      .uri()\r\n      .allow(\"\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    if (!data.bizImage) delete data.bizImage;\r\n    await cardService.createCard(this.state.data);\r\n    toast(\"A new card is opened\");\r\n    this.props.history.replace(\"/my-cards\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Business Registration Form\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>Open business card</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"bizName\", \"Business Name\")}\r\n              {this.renderInput(\"bizDescription\", \"Business Description\")}\r\n              {this.renderInput(\"bizAddress\", \"Business Address\")}\r\n              {this.renderInput(\"bizPhone\", \"Business Phone\")}\r\n              {this.renderInput(\"bizImage\", \"Business Image\")}\r\n              {this.renderButton(\"Create Card\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateCard;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport userService from \"../../services/userService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  const currentUser = userService.getCurrentUser();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!currentUser || (rest.biz && !currentUser.biz))\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/signin\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({ card }) => {\r\n  return (\r\n    <div className=\"col-md-6 col-lg-4 mt-3\">\r\n      <div className=\"card\">\r\n        <img\r\n          className=\"p-2\"\r\n          src={card.bizImage}\r\n          width=\"300\"\r\n          height=\"250\"\r\n          alt={card.bizName}\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{card.bizName}</h5>\r\n          <p className=\"card-text\">{card.bizDescription}</p>\r\n          <p className=\"card-text border-top pt-2\">\r\n            <b>Tel: </b>\r\n            {card.bizPhone}\r\n            <br />\r\n            {card.bizAddress}\r\n          </p>\r\n          <Link to={`/my-cards/edit/${card._id}`}>Edit</Link> |\r\n          <Link className=\"ml-2\" to={`/my-cards/delete/${card._id}`}>\r\n            Delete\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport cardService from \"../services/cardService\";\r\nimport Card from \"./card\";\r\n\r\nclass MyCards extends Component {\r\n  state = {\r\n    cards: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await cardService.getMyCards();\r\n    if (data.length > 0) this.setState({ cards: data });\r\n  }\r\n\r\n  render() {\r\n    const { cards } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"My Cards Page\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>Your cards in the list below...</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {cards.length > 0 &&\r\n            cards.map(card => <Card key={card._id} card={card} />)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyCards;\r\n","import React from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport cardService from \"../services/cardService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass EditCard extends Form {\r\n  state = {\r\n    data: {\r\n      bizName: \"\",\r\n      bizDescription: \"\",\r\n      bizAddress: \"\",\r\n      bizPhone: \"\",\r\n      bizImage: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    bizName: Joi.string()\r\n      .min(2)\r\n      .max(255)\r\n      .required(),\r\n    bizDescription: Joi.string()\r\n      .min(2)\r\n      .max(1024)\r\n      .required(),\r\n    bizAddress: Joi.string()\r\n      .min(2)\r\n      .max(400)\r\n      .required(),\r\n    bizPhone: Joi.string()\r\n      .min(9)\r\n      .max(10)\r\n      .required()\r\n      .regex(/^0[2-9]\\d{7,8}$/),\r\n    bizImage: Joi.string()\r\n      .min(11)\r\n      .max(1024)\r\n      .uri()\r\n      .allow(\"\")\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const cardId = this.props.match.params.id;\r\n    const { data } = await cardService.getCard(cardId);\r\n    this.setState({ data: this.mapToViewModel(data) });\r\n  }\r\n\r\n  mapToViewModel(card) {\r\n    return {\r\n      _id: card._id,\r\n      bizName: card.bizName,\r\n      bizDescription: card.bizDescription,\r\n      bizAddress: card.bizAddress,\r\n      bizPhone: card.bizPhone,\r\n      bizImage: card.bizImage\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n    await cardService.editCard(data);\r\n    toast(\"Card is Updated\");\r\n    this.props.history.replace(\"/my-cards\");\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.history.push(\"/my-cards\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <PageHeader titleText=\"Edit Card Form\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <p>Fill out card details here</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\" method=\"POST\">\r\n              {this.renderInput(\"bizName\", \"Business Name\")}\r\n              {this.renderInput(\"bizDescription\", \"Business Description\")}\r\n              {this.renderInput(\"bizAddress\", \"Business Address\")}\r\n              {this.renderInput(\"bizPhone\", \"Business Phone\")}\r\n              {this.renderInput(\"bizImage\", \"Business Image\")}\r\n              {this.renderButton(\"Update Card\")}\r\n              <button\r\n                className=\"btn btn-secondary ml-2\"\r\n                onClick={this.handleCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCard;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport Footer from \"./components/footer\";\nimport Home from \"./components/home\";\nimport About from \"./components/about\";\nimport Signup from \"./components/signup\";\nimport Signin from \"./components/signin\";\nimport Logout from \"./components/logout\";\nimport BizSignup from \"./components/bizSignup\";\nimport CreateCard from \"./components/createCard\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport userService from \"./services/userService\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport MyCards from \"./components/myCards\";\nimport EditCard from \"./components/editCard\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = userService.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <header>\n          <Navbar user={user} />\n        </header>\n        <main style={{ minHeight: 900 }}>\n          <Switch>\n            <ProtectedRoute\n              path=\"/my-cards/edit/:id\"\n              component={EditCard}\n              biz={true}\n            />\n            <ProtectedRoute\n              path=\"/my-cards/delete/:id\"\n              component={MyCards}\n              biz={true}\n            />\n            <ProtectedRoute path=\"/my-cards\" component={MyCards} biz={true} />\n            <ProtectedRoute\n              path=\"/create-card\"\n              exact component={CreateCard}\n              biz={true}\n            />\n            <Route path=\"/biz-signup\" component={BizSignup} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/signin\" component={Signin} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/\" exact component={Home} />\n          </Switch>\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"jquery/dist/jquery\";\nimport \"popper.js/dist/popper\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}